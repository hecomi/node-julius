'\" t
.\"     Title: 
    mkbinhmm
  
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 12/19/2013
.\"    Manual: 
.\"    Source: 
.\"  Language: English
.\"
.TH "MKBINHMM" "1" "12/19/2013" ""
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"

    mkbinhmm
   \- convert HMM definition file in HTK ascii format to Julius binary format
.SH "SYNOPSIS"
.HP \w'\fBmkbinhmm\fR\ 'u
\fBmkbinhmm\fR [\-htkconf\ \fIHTKConfigFile\fR] {hmmdefs_file} {binhmm_file}
.SH "DESCRIPTION"
.PP

\fBmkbinhmm\fR
convert an HMM definition file in HTK ascii format into a binary HMM file for Julius\&. It will greatly speed up the launch process\&.
.PP
You can also embed acoustic analysis condition parameters needed for recognition into the output file\&. To embed the parameters, specify the HTK Config file you have used to extract acoustic features for training the HMM by the optione "\fB\-htkconf\fR"\&.
.PP
The embedded parameters in a binary HMM format will be loaded into Julius automatically, so you do not need to specify the acoustic feature options at run time\&. It will be convenient when you deliver an acoustic model\&.
.PP
You can also specify binary file as the input\&. This can be used to update the old binary format into new one, or to embed the config parameters into the already existing binary files\&. If the input binhmm already has acoustic analysis parameters embedded, they will be overridden by the specified values\&.
.PP

\fBmkbinhmm\fR
can read gzipped file as input\&.
.SH "OPTIONS"
.PP
\fB \-htkconf \fR \fIHTKConfigFile\fR
.RS 4
HTK Config file you used at training time\&. If specified, the values are embedded to the output file\&.
.RE
.PP
\fIhmmdefs_file\fR
.RS 4
The source HMm definitino file in HTK ascii format or Julius binary format\&.
.RE
.PP
\fIhmmdefs_file\fR
.RS 4
Output file\&.
.RE
.SH "EXAMPLES"
.PP
Convert HTK ascii format HMM definition file into Julius binary file:
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbinhmm\fR hmmdefs\&.ascii binhmm .fi .if n \{\ .RE .\}
Furthermore, embed acoustic feature parameters as specified by Config file
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbinhmm\fR \-htkconf Config hmmdefs\&.ascii binhmm .fi .if n \{\ .RE .\}
Embed the acoustic parameters into an existing binary file
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbingram\fR \-htkconf Config old_binhmm new_binhmm .fi .if n \{\ .RE .\}
.SH "SEE ALSO"
.PP

\fB julius \fR( 1 )
,
\fB mkbingram \fR( 1 )
,
\fB mkbinhmmlist \fR( 1 )
.SH "COPYRIGHT"
.PP
Copyright (c) 1991\-2013 Kawahara Lab\&., Kyoto University
.PP
Copyright (c) 1997\-2000 Information\-technology Promotion Agency, Japan
.PP
Copyright (c) 2000\-2005 Shikano Lab\&., Nara Institute of Science and Technology
.PP
Copyright (c) 2005\-2013 Julius project team, Nagoya Institute of Technology
.SH "LICENSE"
.PP
The same as Julius\&.
