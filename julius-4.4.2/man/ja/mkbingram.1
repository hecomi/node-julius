'\" t
.\"     Title: 
    mkbingram
  
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 19/12/2013
.\"    Manual: 
.\"    Source: 
.\"  Language: Japanese
.\"
.TH "MKBINGRAM" "1" "19/12/2013" ""
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "名前"

    mkbingram
   \- バイナリ N\-gram 変換
.SH "概要"
.HP \w'\fBmkbingram\fR\ 'u
\fBmkbingram\fR [\-nlr\ \fIforward_ngram\&.arpa\fR] [\-nrl\ \fIbackward_ngram\&.arpa\fR] [\-d\ \fIold_bingram_file\fR] {output_bingram_file}
.SH "DESCRIPTION"
.PP
mkbingram は，ARPA形式の N\-gram 定義ファイルをJulius用のバイナリN\-gram ファイルに変換するツールです．あらかじめ変換しておくことで，Juliusの起 動を大幅に高速化できます．
.PP
Julius\-4より，N\-gram は前向き，後ろ向き，あるいは両方を指定できるよう になりました．mkbingram でも，どちらか一方だけでバイナリN\-gramを作成するこ とができます．また，両方を指定した場合は，それら2つのN\-gramは一つのバ イナリN\-gramに結合されます．
.PP
前向きN\-gramのみが指定されたとき，mkbingram は 前向きN\-gramだけからバ イナリN\-gramを生成します．このバイナリN\-gramを使うとき，Julius はその 中の 2\-gram を使って第1パスを行い，第2 パ スではその前向き確率から後向 きの確率を，ベイズ則に従って算出しながら認識を行います．
.PP
後向きN\-gramのみが指定されたとき，mkbingramは後ろ向きN\-gramだけからバ イナリN\-gramを生成します．このバイナリN\-gramを使うとき，Julius はその 中の後向き 2\-gram からベイズ則に従って算出しながら第1パスの認識を行い， 第2パスでは後向き N\-gramを使った認識を行います．
.PP
両方が指定されたときは，前向きN\-gram中の2\-gramと後向きN\-gramが統合され たバイナリN\-gramが生成されます．Juliusではその前向き2\-gramで第1パスを 行い，後向きN\-gramで第2パスを行います．なお両 N\-gram は同一のコーパス から同 一の条件（カットオフ値，バックオフ計算方法等）で学習されてあり， 同一の語彙を持っている必要があります．
.PP
なお，mkbingram は gzip 圧縮された ARPA ファイルもそのまま読み込めます．
.PP
また，バージョン 4\&.2\&.3よりバイナリN\-gram内の文字コードの変換が可 能になりました．
.PP
バージョン 3\&.x 以前で作成したバイナリN\-gramは，そのまま 4\&.0 でも読めま す．mkbingram に
\fB\-d\fR
で与えることで，古いバイナリ形式 を新しいバイナリ形式に変換することもできます．なお，4\&.0 以降の mkbingram で作成したバイナリN\-gramファイルは3\&.x 以前のバージョンでは 使えませんのでご注意ください．
.SH "OPTIONS"
.PP
\fB \-nlr \fR \fIforward_ngram\&.arpa\fR
.RS 4
前向き（left\-to\-right）のARPA形式 N\-gram ファイルを読み込む
.RE
.PP
\fB \-nrl \fR \fIbackward_ngram\&.arpa\fR
.RS 4
後ろ向き（right\-to\-left）のARPA形式 N\-gram ファイルを読み込む
.RE
.PP
\fB \-d \fR \fIold_bingram_file\fR
.RS 4
バイナリN\-gramを読み込む（古いバイナリ形式の変換用）
.RE
.PP
\fB \-swap \fR
.RS 4
文頭記号 <s> と文末記号 </s> を入れ替える．
.RE
.PP
\fB \-c \fR \fIfrom to\fR
.RS 4
バイナリN\-gram内の文字コードを変換する．（from, toは文字コードを表す文字列）
.RE
.PP
\fIoutput_bingram_file\fR
.RS 4
出力先のバイナリN\-gramファイル名
.RE
.SH "EXAMPLES"
.PP
ARPA形式の N\-gram をバイナリ形式に変換する（前向き+後ろ向き）：
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbingram\fR \-nlr 2gram\&.arpa \-nrl rev\-Ngram\&.arpa outfile .fi .if n \{\ .RE .\}
ARPA形式の前向き 4\-gram をバイナリ形式に変換する（前向きのみ）：
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbingram\fR \-nlr 4gram\&.arpa outfile .fi .if n \{\ .RE .\}
古いバイナリN\-gramファイルを現在の形式に変換する：
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbingram\fR \-d old_bingram new_bingram .fi .if n \{\ .RE .\}
.SH "SEE ALSO"
.PP

\fB julius \fR( 1 )
,
\fB mkbinhmm \fR( 1 )
.SH "COPYRIGHT"
.PP
Copyright (c) 1991\-2013 京都大学 河原研究室
.PP
Copyright (c) 1997\-2000 情報処理振興事業協会(IPA)
.PP
Copyright (c) 2000\-2005 奈良先端科学技術大学院大学 鹿野研究室
.PP
Copyright (c) 2005\-2013 名古屋工業大学 Julius開発チーム
.SH "LICENSE"
.PP
Julius の使用許諾に準じます．
