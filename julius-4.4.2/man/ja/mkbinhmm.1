'\" t
.\"     Title: 
    mkbinhmm
  
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 19/12/2013
.\"    Manual: 
.\"    Source: 
.\"  Language: Japanese
.\"
.TH "MKBINHMM" "1" "19/12/2013" ""
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "名前"

    mkbinhmm
   \- バイナリ HMM 変換
.SH "概要"
.HP \w'\fBmkbinhmm\fR\ 'u
\fBmkbinhmm\fR [\-htkconf\ \fIHTKConfigFile\fR] {hmmdefs_file} {binhmm_file}
.SH "DESCRIPTION"
.PP
mkbinhmm は，HTKのアスキー形式のHMM定義ファイルを，Julius用のバイナ リ形式へ変換します．これを使うことで Juliusの起動を高速化することができます．
.PP
この音響モデルの特徴抽出条件を出力ファイルのヘッダに埋め込むことができ ます．埋め込むには，学習時に特徴量抽出に用いた HTK Config ファイルを "\fB\-htkconf\fR" で指定します．ヘッダに抽出条件を埋め込むことで， 認識時に自動的に必要な特徴抽出パラメータがセットされるので，便利です．
.PP
入力として，HTKアスキー形式のほかに，既に変換済みのJulius用バイナリHMM を与えることもできます．\fB\-htkconf\fR
と併用すれば， 既存のバイナリHMMに特徴量抽出条件パラメータを埋め込むことができます．
.PP
mkbinhmm は gzip 圧縮されたHMM定義ファイルをそのまま読み込めます．
.SH "OPTIONS"
.PP
\fB \-htkconf \fR \fIHTKConfigFile\fR
.RS 4
学習時に特徴量抽出に使用したHTK Configファイルを指定する．指定さ れた場合，その中の設定値が出力ファイルのヘッダに埋め込まれる． 入力に既にヘッダがある場合上書きされる．
.RE
.PP
\fIhmmdefs_file\fR
.RS 4
変換元の音響モデル定義ファイル (MMF)．HTK ASCII 形式，あるいは Julius バイナリ形式．
.RE
.PP
\fIhmmdefs_file\fR
.RS 4
Julius用バイナリ形式ファイルの出力先．
.RE
.SH "EXAMPLES"
.PP
HTK ASCII 形式の HMM 定義をバイナリ形式に変換する：
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbinhmm\fR hmmdefs\&.ascii binhmm .fi .if n \{\ .RE .\}
HTKの設定ファイル Config の内容をヘッダに書き込んで出力：
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbinhmm\fR \-htkconf Config hmmdefs\&.ascii binhmm .fi .if n \{\ .RE .\}
古いバイナリ形式ファイルにヘッダ情報だけ追加する：
.sp .if n \{\ .RS 4 .\} .nf % \fBmkbingram\fR \-htkconf Config old_binhmm new_binhmm .fi .if n \{\ .RE .\}
.SH "SEE ALSO"
.PP

\fB julius \fR( 1 )
,
\fB mkbingram \fR( 1 )
.SH "COPYRIGHT"
.PP
Copyright (c) 1991\-2013 京都大学 河原研究室
.PP
Copyright (c) 1997\-2000 情報処理振興事業協会(IPA)
.PP
Copyright (c) 2000\-2005 奈良先端科学技術大学院大学 鹿野研究室
.PP
Copyright (c) 2005\-2013 名古屋工業大学 Julius開発チーム
.SH "LICENSE"
.PP
Julius の使用許諾に準じます．
